syntax = "proto3";

/* 注意事项:
 * package 和 option 是固定的，不可更改
 * service、rpc方法、message、enum的命名须符合PascalCase规范
 * service名称必须以Service结尾
 * 入参的message必须以Request结果
 * 出参的message必须以Response结尾，切前2个字段必须是return_code和return_msg
 * message的字段命名须符合lower_snake_case
 * 枚举项全部大写，且至少有一个，枚举序号必须从0开始
 * 字段常用的基础数据类型:double、float、int32、int64、bool、string、bytes
 * 一旦将文件提交至大仓，不得再对service名、rpc方法名、message名以及字段名、字段类型、字段序号进行修改
 */

package autohome.rpc.car.car_api.v1;
option java_multiple_files = true;
option java_outer_classname = "EnumsProto";
option java_package = "autohome.rpc.car.car_api.v1";
option go_package = "git.corpautohome.com/microservice/go-genproto/autohome/rpc/car/car_api/v1;car_api";
option csharp_namespace = "autohome.rpc.car.car_api.v1";

//车型状态
enum SpecStateEnum {
  //无
  NONE = 0;
  //未上市: 0x0001
  NO_SELL = 1;
  //即将上市: 0x0002
  WAIT_SELL = 2;
  //在产在售: 0x0004
  SELL = 3;
  //停产在售: 0x0008
  SELL_IN_STOP = 4;
  //停售: 0x0010
  STOP_SELL = 5;
}
