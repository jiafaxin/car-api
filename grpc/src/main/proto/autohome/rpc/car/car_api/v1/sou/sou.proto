syntax = "proto3";

/* 注意事项:
 * package 和 option 是固定的，不可更改
 * service、rpc方法、message、enum的命名须符合PascalCase规范
 * service名称必须以Service结尾
 * 入参的message必须以Request结果
 * 出参的message必须以Response结尾，切前2个字段必须是return_code和return_msg
 * message的字段命名须符合lower_snake_case
 * 枚举项全部大写，且至少有一个，枚举序号必须从0开始
 * 字段常用的基础数据类型:double、float、int32、int64、bool、string、bytes
 * 一旦将文件提交至大仓，不得再对service名、rpc方法名、message名以及字段名、字段类型、字段序号进行修改
 */

package autohome.rpc.car.car_api.v1.sou;
option java_multiple_files = true;
option java_outer_classname = "SouProto";
option java_package = "autohome.rpc.car.car_api.v1.sou";
option go_package = "git.corpautohome.com/microservice/go-genproto/autohome/rpc/car/car_api/v1/sou;sou";
option csharp_namespace = "autohome.rpc.car.car_api.v1.sou";


/**
  * service 样例
  * 维护人: shicuining
  * 生产环境 - 主机: car_car_api.grpc.corpautohome.com
  * 预发环境 - 主机: car_car_api.thallo.corpautohome.com
  * 测试环境 - 主机: car_car_api.terra.corpautohome.com
 */
service SampleService {

  /**
  * 精准找车
  * 维护人: shicuining
 */
  rpc SeriesFindCar (SeriesFindCarRequest) returns (SeriesFindCarResponse) {}


}



message SeriesFindCarRequest{
  //
  string price = 1;
  int32 brandid = 2;
  string levelid = 3;
  int32 gearboxid = 4;
  string displacementid = 5;
  string structureid = 6;
  int32 countryid = 7;
  string configid = 8;
  int32 propertyid = 9[json_name="Propertyid"];
  int32 fueltype = 10[json_name="FuelType"];
  int32 seat = 11;
  int32 drivetype = 12;
}

message SeriesFindCarResponse{
  int32 return_code = 1 [json_name = "returncode"];
  string return_msg = 2 [json_name = "message"];
  Result result = 3;
  message Result{
    int32 total = 1;
    repeated Item items = 2;

    message Item{
      string seriesname = 1;
      int32 seriesrank = 2;
      int32 seriesminprice = 3;
      int32 seriesmaxprice = 4;
      string brandname = 5;
      int32 seriesid = 6;
    }
  }

}

