syntax = "proto3";

/* 注意事项:
 * package 和 option 是固定的，不可更改
 * service、rpc方法、message、enum的命名须符合PascalCase规范
 * service名称必须以Service结尾
 * 入参的message必须以Request结果
 * 出参的message必须以Response结尾，切前2个字段必须是return_code和return_msg
 * message的字段命名须符合lower_snake_case
 * 枚举项全部大写，且至少有一个，枚举序号必须从0开始
 * 字段常用的基础数据类型:double、float、int32、int64、bool、string、bytes
 * 一旦将文件提交至大仓，不得再对service名、rpc方法名、message名以及字段名、字段类型、字段序号进行修改
 */

package autohome.rpc.car.car_api.v1.year;
option java_multiple_files = true;
option java_outer_classname = "YearProto";
option java_package = "autohome.rpc.car.car_api.v1.year";
option go_package = "git.corpautohome.com/microservice/go-genproto/autohome/rpc/car/car_api/v1/year;year";
option csharp_namespace = "autohome.rpc.car.car_api.v1.year";

import "autohome/api/annotations.proto";


/**
  * service 样例
  * 维护人: jiafaxin
  * 生产环境 - 主机: car_car_api.grpc.corpautohome.com
  * 预发环境 - 主机: car_car_api.thallo.corpautohome.com
  * 测试环境 - 主机: car_car_api.terra.corpautohome.com
 */
service YearService {
  /**
    * GetYearItemsBySeriesId
    * 维护人:jiafaxin
    */
  rpc GetYearItemsBySeriesId (GetYearItemsBySeriesIdRequest) returns (GetYearItemsBySeriesIdResponse) {
    option (autohome.api.http) = {get: "/v1/www/Year_GetYearItemsBySeriesId.ashx"};
  }

  /**
  *
  */
  rpc GetYearInfoBySeriesId (GetYearInfoBySeriesIdRequest) returns (GetYearInfoBySeriesIdResponse) {}

  /**
  * 根据年代款id获取年代款相关参数信息
  */
  rpc YearParamByYearId (YearParamByYearIdRequest) returns (YearParamByYearIdResponse) {}

  /**
  * 根据年代款id获取对应25图
  */
  rpc Year25PictureByYearId (Year25PictureByYearIdRequest) returns (Year25PictureByYearIdResponse) {}

  rpc GetSYearBySeries (GetSYearBySeriesRequest) returns (GetSYearBySeriesResponse) {}

  rpc GetYearInfoByYearId (GetYearInfoByYearIdRequest) returns (GetYearInfoByYearIdResponse) {}

  rpc GetYearColorByYearId (GetYearColorByYearIdRequest) returns(GetYearColorByYearIdResponse){}

  rpc GetYearInnerColorByYearId (GetYearInnerColorByYearIdRequest) returns(GetYearInnerColorByYearIdResponse){}
}

message GetYearItemsBySeriesIdRequest{
  string appid = 1[json_name="_appid"];
  int32 seriesid = 2;
}

message GetYearItemsBySeriesIdResponse{
  int32  return_code = 1 [json_name="returncode"];
  string return_msg = 2 [json_name="message"];
  Result result = 3;
  message Result{
    int32 serieid = 1;
    repeated YearView yearitems = 2;
  }
  message YearView{
    int32 id = 1;
    int32 year = 2;
    int32 state = 3;
    int32 specnum = 4;
    int32 specnumunsold = 5;
    int32 specnumsale = 6;
    int32 specnumstop = 7;
  }
}


message GetYearInfoBySeriesIdRequest{
  string appid = 1[json_name="_appid"];
  int32 seriesid = 2;
}

message GetYearInfoBySeriesIdResponse{
  int32  return_code = 1 [json_name="returncode"];
  string return_msg = 2 [json_name="message"];
  Result result = 3;
  message Result{
    int32 seriesid = 1;
    int32 total = 2;
    repeated YearInfo yearitems = 3;
  }
  message YearInfo{
    int32 yearid = 1;
    int32 yearnumber = 2;
    string yearname = 3;
    int32 seriesid = 4;
    string seriesname = 5;
    int32 yearispublic = 6;
    int32 yearstate = 7;
  }
}

message YearParamByYearIdRequest{
  int32 seriesid = 1;
  int32 yearid = 2;
  string state = 3;

}

message YearParamByYearIdResponse{
  int32  return_code = 1 [json_name = "returncode"];
  string return_msg = 2 [json_name = "message"];
  Result result = 3;

  message Result{
    int32 id = 1;
    int32 maxprice = 2;
    int32 minprice = 3;
    int32 fctid = 4;
    string fctname = 5;
    int32 brandid = 6;
    string brandname = 7;
    int32 seriesid = 8;
    string seriesname = 9;
    repeated string structitems = 10;
    repeated string transmissionitems = 11;
    repeated string displacementitems = 12;
    int32 levelid = 13;
    string levelname = 14;
    repeated string picitems = 15;
    repeated Picinfoitems picinfoitems = 16;
    int32 specnum = 17;
    int32 picnum = 18;
    int32 isshow = 19;
    int32 showelectricparam = 20;
    repeated int32 electricmotormileage = 21;
    repeated double electricmotorkw = 22;
    string electricchargetime = 23;

  }

  message Picinfoitems{
    int32 picid = 1;
    int32 specid = 2;
    int32 specstate = 3;
    string picpath = 4;

  }
}

message Year25PictureByYearIdRequest{
  int32 seriesid = 1;
  int32 yearid = 2;
}

message Year25PictureByYearIdResponse{
  int32  return_code = 1 [json_name = "returncode"];
  string return_msg = 2 [json_name = "message"];
  Result result = 3;

  message Result{
    int32 yearid = 1;
    int32 seriesid = 2;
    string seriesname = 3;
    int32 total = 4;
    repeated Picitems picitems = 5;
  }

  message Picitems{
    int32 itemid = 1;
    int32 typeid = 2;
    string itemname = 3;
    int32 picid = 4;
    string picpath = 5;
    int32 specid = 6;
    string specname = 7;
  }
}
message GetSYearBySeriesRequest{
  int32 seriesid = 1;
  string state = 2;
  int32 is_filter_spec_image = 3[json_name = "IsFilterSpecImage"];
}
message GetSYearBySeriesResponse{
  int32 return_code = 1 [json_name = "returncode"];
  string return_msg = 2 [json_name = "message"];
  Result result = 3;
  message Result{
    repeated Yearitem yearitems = 1;
    message Yearitem{
      int32 id = 1;
      string name = 2;
    }
  }
}


message GetYearInfoByYearIdRequest{
  string appid = 1[json_name="_appid"];
  int32 yearid = 2;
}

message GetYearInfoByYearIdResponse{
  int32  return_code = 1 [json_name="returncode"];
  string return_msg = 2 [json_name="message"];
  Result result = 3;
  message Result{
    int32 yearid = 1;
    int32 yearnumber = 2;
    string yearname = 3;
    int32 seriesid = 4;
    string seriesname = 5;
    int32 yearispublic = 6;
    int32 yearstate = 7;
  }
}


message GetYearColorByYearIdRequest{
  string appid = 1[json_name="_appid"];
  int32 seriesid = 2;
  int32 yearid = 3;
  string state = 4;
}
message GetYearInnerColorByYearIdRequest{
  string appid = 1[json_name="_appid"];
  int32 seriesid = 2;
  int32 yearid = 3;
  string state = 4;
}
message GetYearColorByYearIdResponse{
  int32  return_code = 1 [json_name="returncode"];
  string return_msg = 2 [json_name="message"];
  Result result = 3;
  message Result{
    int32 yearid = 1;
    int32 total = 2;
    repeated Colors coloritems = 3;
  }
  message Colors{
    int32 id = 1;
    string name = 2;
    string value = 3;
    int32 picnum = 4;
    int32 clubpicnum = 5;
  }
}

message GetYearInnerColorByYearIdResponse{
  int32  return_code = 1 [json_name="returncode"];
  string return_msg = 2 [json_name="message"];
  Result result = 3;
  message Result{
    int32 yearid = 1;
    int32 total = 2;
    repeated Colors coloritems = 3;
  }
  message Colors{
    int32 id = 1;
    string name = 2;
    string value = 3;
    int32 picnum = 4;
    int32 clubpicnum = 5;
  }
}

